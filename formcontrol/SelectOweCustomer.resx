<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CancelBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="AcceptBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oVwAAAAASUVORK5CYII=
</value>
  </data>
</root>